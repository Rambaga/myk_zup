
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	ФизическиеЛица.Код КАК Код
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	НЕ ФизическиеЛица.ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическиеЛица.Наименование";
	
	ФизЛицо.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) КАК Период
		|ПОМЕСТИТЬ ВтТаблицаПериодов
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТаблицаПериодов.Период КАК Период
		|ИЗ
		|	ВтТаблицаПериодов КАК ВтТаблицаПериодов
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтТаблицаПериодов.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Периоды.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры



&НаКлиенте
Процедура ФизЛицоПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ФизЛицо.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ФизЛицоПриАктивизацииСтрокиНаСервере(ТекущиеДанные.ФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ТекущиеДанные = Элементы.ФизЛицо.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ФизЛицоПриАктивизацииСтрокиНаСервере(ТекущиеДанные.ФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	ТекДанные = Элементы.ФизЛицо.ТекущиеДанные;
	Если ТекДанные <> неопределено Тогда
		ПараметрыФормы = Новый Структура("Ключ", ТекДанные.ФизическоеЛицо);
		Форма = ОткрытьФорму("Справочник."+ПолучитьИмяОбъекта(ТекДанные.ФизическоеЛицо)+".ФормаОбъекта", ПараметрыФормы);
		Форма.Открыть();
	Конецесли;
	
КонецПроцедуры

&НаСервере
Процедура ФизЛицоПриАктивизацииСтрокиНаСервере(ФизическоеЛицо)
	
	ЗаполнитьТчНачисления(ФизическоеЛицо);
	ЗаполнитьТчВзаиморасчеты(ФизическоеЛицо);
	ЗаполнитьТчЗарплата(ФизическоеЛицо);
	//ЗаполнитьОстаткиЗаВесьПериод(ФизическоеЛицо);
	Список.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТчНачисления(ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) КАК Период,
		|	НачисленияУдержанияПоСотрудникам.Сумма КАК Начислено,
		|	0 КАК Удержано
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = &ГруппаНачисления
		|	И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = &ФизическоеЛицо
		|	И НачисленияУдержанияПоСотрудникам.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ),
		|	0,
		|	НачисленияУдержанияПоСотрудникам.Сумма
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = &ГруппаУдержанияВыплаты
		|	И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = &ФизическоеЛицо
		|	И НачисленияУдержанияПоСотрудникам.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Период КАК Период,
		|	СУММА(вт.Начислено) КАК Начислено,
		|	СУММА(вт.Удержано) КАК Удержано
		|ПОМЕСТИТЬ ВтНачисленияМинусУдержание
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзаиморасчетыССотрудниками.Период КАК Период,
		|	ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов КАК Приход
		|ПОМЕСТИТЬ ВтПриходРасход
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо = &ФизическоеЛицо
		|	И ВзаиморасчетыССотрудниками.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНачисленияМинусУдержание.Период КАК Период,
		|	ВтНачисленияМинусУдержание.Начислено КАК Начислено,
		|	ВтНачисленияМинусУдержание.Удержано КАК Удержано,
		|	0 КАК Выплата
		|ПОМЕСТИТЬ ВтНачисленияВыплаты
		|ИЗ
		|	ВтНачисленияМинусУдержание КАК ВтНачисленияМинусУдержание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВтПриходРасход.Период,
		|	0,
		|	0,
		|	ВтПриходРасход.Приход
		|ИЗ
		|	ВтПриходРасход КАК ВтПриходРасход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНачисленияВыплаты.Период КАК Период,
		|	СУММА(ВтНачисленияВыплаты.Начислено) КАК Начислено,
		|	СУММА(ВтНачисленияВыплаты.Удержано) КАК Удержано,
		|	СУММА(ВтНачисленияВыплаты.Выплата) КАК Выплата
		|ПОМЕСТИТЬ ВтНачисленияВыплатыСгруппировано
		|ИЗ
		|	ВтНачисленияВыплаты КАК ВтНачисленияВыплаты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтНачисленияВыплаты.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНачисленияВыплатыСгруппировано.Период КАК Период,
		|	ВтНачисленияВыплатыСгруппировано.Начислено КАК Начислено,
		|	ВтНачисленияВыплатыСгруппировано.Удержано КАК Удержано,
		|	ВтНачисленияВыплатыСгруппировано.Выплата КАК Выплата,
		|	ВтНачисленияВыплатыСгруппировано.Начислено * 0.13 КАК Процент13,
		|	ВтНачисленияВыплатыСгруппировано.Начислено * 0.13 - ВтНачисленияВыплатыСгруппировано.Удержано КАК Корректно,
		|	ВтНачисленияВыплатыСгруппировано.Начислено - ВтНачисленияВыплатыСгруппировано.Удержано - ВтНачисленияВыплатыСгруппировано.Выплата КАК Остаток
		|ИЗ
		|	ВтНачисленияВыплатыСгруппировано КАК ВтНачисленияВыплатыСгруппировано
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("ГруппаНачисления", Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено);
	Запрос.УстановитьПараметр("ГруппаУдержанияВыплаты", Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано);
	
	НачисленияВыплаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТчВзаиморасчеты(ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыССотрудниками.Период КАК Период,
		|	ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов КАК Приход,
		|	0 КАК Расход
		|ПОМЕСТИТЬ ВтПриходРасход
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо = &ФизическоеЛицо
		|	И ВзаиморасчетыССотрудниками.Активность = ИСТИНА
		|	И ВзаиморасчетыССотрудниками.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВзаиморасчетыССотрудниками.Период,
		|	0,
		|	ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо = &ФизическоеЛицо
		|	И ВзаиморасчетыССотрудниками.Активность = ИСТИНА
		|	И ВзаиморасчетыССотрудниками.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПриходРасход.Период КАК Период,
		|	СУММА(ВтПриходРасход.Приход) КАК Приход,
		|	СУММА(ВтПриходРасход.Расход) КАК Расход
		|ПОМЕСТИТЬ ВтПромежут
		|ИЗ
		|	ВтПриходРасход КАК ВтПриходРасход
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтПриходРасход.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПромежут.Период КАК Период,
		|	ВтПромежут.Приход КАК Приход,
		|	ВтПромежут.Расход КАК Расход,
		|	ВтПромежут.Приход - ВтПромежут.Расход КАК Остаток
		|ИЗ
		|	ВтПромежут КАК ВтПромежут
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Объект.Взаиморасчеты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТчЗарплата(ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗарплатаКВыплате.Период КАК Период,
		|	ЗарплатаКВыплате.СуммаКВыплате КАК Приход,
		|	0 КАК Расход
		|ПОМЕСТИТЬ ВтПриходРасход
		|ИЗ
		|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
		|ГДЕ
		|	ЗарплатаКВыплате.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ЗарплатаКВыплате.ФизическоеЛицо = &ФизическоеЛицо
		|	И ЗарплатаКВыплате.Активность = ИСТИНА
		|	И ЗарплатаКВыплате.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗарплатаКВыплате.Период,
		|	0,
		|	ЗарплатаКВыплате.СуммаКВыплате
		|ИЗ
		|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
		|ГДЕ
		|	ЗарплатаКВыплате.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ЗарплатаКВыплате.ФизическоеЛицо = &ФизическоеЛицо
		|	И ЗарплатаКВыплате.Активность = ИСТИНА
		|	И ЗарплатаКВыплате.Период < ДАТАВРЕМЯ(2020, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПриходРасход.Период КАК Период,
		|	СУММА(ВтПриходРасход.Приход) КАК Приход,
		|	СУММА(ВтПриходРасход.Расход) КАК Расход
		|ПОМЕСТИТЬ ВтПромежут
		|ИЗ
		|	ВтПриходРасход КАК ВтПриходРасход
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтПриходРасход.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПромежут.Период КАК Период,
		|	ВтПромежут.Приход КАК Приход,
		|	ВтПромежут.Расход КАК Расход,
		|	ВтПромежут.Приход - ВтПромежут.Расход КАК Остаток
		|ИЗ
		|	ВтПромежут КАК ВтПромежут
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Объект.Расчеты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры



&НаКлиенте
Процедура НачисленияВыплатыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.НачисленияВыплаты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачисленияВыплатыПриАктивизацииСтрокиНаСервере(Элементы.ФизЛицо.ТекущиеДанные.ФизическоеЛицо, ТекущиеДанные.Период);
КонецПроцедуры

&НаСервере
Процедура НачисленияВыплатыПриАктивизацииСтрокиНаСервере(ФизическоеЛицо, Период)
	
	ЗаполнитьТчСписокВзаиморасчеты(ФизическоеЛицо, Период)
	
КонецПроцедуры



&НаКлиенте
Процедура ВзаиморасчетыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Взаиморасчеты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВзаиморасчетыПриАктивизацииСтрокиНаСервере(Элементы.ФизЛицо.ТекущиеДанные.ФизическоеЛицо, ТекущиеДанные.Период);
	
КонецПроцедуры

&НаСервере
Процедура ВзаиморасчетыПриАктивизацииСтрокиНаСервере(ФизическоеЛицо, Период)
	
	ЗаполнитьТчСписокВзаиморасчеты(ФизическоеЛицо, Период);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТчСписокВзаиморасчеты(ФизическоеЛицо, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыССотрудниками.Период КАК Период,
		|	ВзаиморасчетыССотрудниками.Регистратор КАК Регистратор,
		|	ВзаиморасчетыССотрудниками.ВидДвижения КАК ВидДвижения,
		|	ВзаиморасчетыССотрудниками.Сотрудник КАК Сотрудник,
		|	ВзаиморасчетыССотрудниками.Подразделение КАК Подразделение,
		|	ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов КАК Сумма
		
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.Период = &Период
		|	И ВзаиморасчетыССотрудниками.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Список.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры



&НаКлиенте
Процедура РасчетыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Расчеты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасчетыПриАктивизацииСтрокиНаСервере(Элементы.ФизЛицо.ТекущиеДанные.ФизическоеЛицо, ТекущиеДанные.Период);
	
КонецПроцедуры

&НаСервере
Процедура РасчетыПриАктивизацииСтрокиНаСервере(ФизическоеЛицо, Период)
	
	ЗаполнитьТчСписокРасчеты(ФизическоеЛицо, Период);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТчСписокРасчеты(ФизическоеЛицо, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗарплатаКВыплате.Период КАК Период,
		|	ЗарплатаКВыплате.Регистратор КАК Регистратор,
		|	ЗарплатаКВыплате.ВидДвижения КАК ВидДвижения,
		|	ЗарплатаКВыплате.Сотрудник КАК Сотрудник,
		|	ЗарплатаКВыплате.Подразделение КАК Подразделение,
		|	ЗарплатаКВыплате.СуммаКВыплате КАК Сумма
		|ИЗ
		|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
		|ГДЕ
		|	ЗарплатаКВыплате.Период = &Период
		|	И ЗарплатаКВыплате.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Список.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры




&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> неопределено Тогда
		ПараметрыФормы = Новый Структура("Ключ", ТекДанные.Регистратор);
		ФормаРегистратора = ОткрытьФорму("Документ."+ПолучитьИмяОбъекта(ТекДанные.Регистратор)+".ФормаОбъекта", ПараметрыФормы);
		ФормаРегистратора.Открыть();
	Конецесли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиЗаВесьПериод(ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыССотрудникамиОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ВзаиморасчетыССотрудникамиОстатки.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаКВыплате
		|ПОМЕСТИТЬ ВтРегистры
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки(&Дата, ФизическоеЛицо = &ФизическоеЛицо) КАК ВзаиморасчетыССотрудникамиОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗарплатаКВыплатеОстатки.ФизическоеЛицо,
		|	0,
		|	ЕСТЬNULL(ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток, 0)
		|ИЗ
		|	РегистрНакопления.ЗарплатаКВыплате.Остатки(&Дата, ФизическоеЛицо = &ФизическоеЛицо) КАК ЗарплатаКВыплатеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтРегистры.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ВтРегистры.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
		|	МАКСИМУМ(ВтРегистры.СуммаКВыплате) КАК СуммаКВыплате
		|ИЗ
		|	ВтРегистры КАК ВтРегистры
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтРегистры.ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Дата", Дата(2019,12,31));
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Элементы.КоличествоОстатокВзаиморасчеты.Заголовок = "";
		Элементы.КоличествоОстатокРасчеты.Заголовок = "";
		
		Возврат;
		
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.КоличествоОстатокВзаиморасчеты.Заголовок = ВыборкаДетальныеЗаписи.СуммаВзаиморасчетов;
		Элементы.КоличествоОстатокРасчеты.Заголовок = ВыборкаДетальныеЗаписи.СуммаКВыплате;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяОбъекта(ОбъектСсылка)
	Возврат ОбъектСсылка.Метаданные().Имя;
конецфункции 

&НаКлиенте
Процедура ПериодыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Периоды.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПериодыПриАктивизацииСтрокиНаСервере(ТекущиеДанные.Период);

КонецПроцедуры

&НаСервере
Процедура ПериодыПриАктивизацииСтрокиНаСервере(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) КАК Период,
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержанияПоСотрудникам.Сумма КАК Начислено,
	|	0 КАК Удержано,
	|	НачисленияУдержанияПоСотрудникам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВтНачисленияУдержания
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = &ГруппаНачисления
	|	И НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ),
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
	|	0,
	|	НачисленияУдержанияПоСотрудникам.Сумма,
	|	НачисленияУдержанияПоСотрудникам.Регистратор
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = &ГруппаУдержания
	|	И НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНачисленияУдержания.Период КАК Период,
	|	ВтНачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВтНачисленияУдержания.Начислено) КАК Начислено,
	|	СУММА(ВтНачисленияУдержания.Удержано) КАК Удержано,
	|	МАКСИМУМ(ВтНачисленияУдержания.Регистратор) КАК РегистраторНачислений
	|ПОМЕСТИТЬ ВтНачисленияУдержанияСгруппировано
	|ИЗ
	|	ВтНачисленияУдержания КАК ВтНачисленияУдержания
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисленияУдержания.Период,
	|	ВтНачисленияУдержания.ФизическоеЛицо,
	|	ВтНачисленияУдержания.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыССотрудниками.Период, МЕСЯЦ) КАК Период,
	|	ВзаиморасчетыССотрудниками.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ВзаиморасчетыССотрудниками.Регистратор КАК РегистраторВзаиморасчетов
	|ПОМЕСТИТЬ ВтРасчеты
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
	|ГДЕ
	|	ВзаиморасчетыССотрудниками.ВидДвижения = &ВидДвижения
	|	И НАЧАЛОПЕРИОДА(ВзаиморасчетыССотрудниками.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНачисленияУдержанияСгруппировано.Период КАК Период,
	|	ВтНачисленияУдержанияСгруппировано.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВтНачисленияУдержанияСгруппировано.Начислено КАК Начислено,
	|	ВтНачисленияУдержанияСгруппировано.Удержано КАК Удержано,
	|	ВтНачисленияУдержанияСгруппировано.РегистраторНачислений КАК РегистраторНачислений,
	|	0 КАК Выплата,
	|	NULL КАК РегистраторВзаиморасчетов
	|ПОМЕСТИТЬ ВтНачисленияУдержанияВыплаты
	|ИЗ
	|	ВтНачисленияУдержанияСгруппировано КАК ВтНачисленияУдержанияСгруппировано
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтРасчеты.Период,
	|	ВтРасчеты.ФизическоеЛицо,
	|	0,
	|	0,
	|	0,
	|	ВтРасчеты.СуммаВзаиморасчетов,
	|	ВтРасчеты.РегистраторВзаиморасчетов
	|ИЗ
	|	ВтРасчеты КАК ВтРасчеты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНачисленияУдержанияВыплаты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ВтНачисленияУдержанияВыплаты.Начислено) КАК Начислено,
	|	СУММА(ВтНачисленияУдержанияВыплаты.Удержано) КАК Удержано,
	|	СУММА(ВтНачисленияУдержанияВыплаты.Выплата) КАК Выплата,
	|	СУММА(ВтНачисленияУдержанияВыплаты.Начислено - ВтНачисленияУдержанияВыплаты.Удержано - ВтНачисленияУдержанияВыплаты.Выплата) КАК Остаток,
	|	МАКСИМУМ(ВтНачисленияУдержанияВыплаты.РегистраторНачислений) КАК РегистраторНачислений,
	|	МАКСИМУМ(ВтНачисленияУдержанияВыплаты.РегистраторВзаиморасчетов) КАК РегистраторВзаиморасчетов
	|ИЗ
	|	ВтНачисленияУдержанияВыплаты КАК ВтНачисленияУдержанияВыплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНачисленияУдержанияВыплаты.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ГруппаНачисления", Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено);
	Запрос.УстановитьПараметр("ГруппаУдержания", Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано);
	
	Объект.СписокФизЛиц.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры